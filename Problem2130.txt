/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public int pairSum(ListNode head) {
        ArrayList<Integer> arr = new ArrayList<>();
        while(head != null){
            arr.add(head.val);
            head = head.next;
        }
        int start = 0;
        int end = arr.size()-1;
        int max = 0;
        while(start < end){
            if(max < arr.get(start) + arr.get(end)){
                max = arr.get(start) + arr.get(end);
            }
            start++;
            end--;
        }

      
        return max;
    }
}